name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    tags: [ 'v*' ]

# Explicit permissions (least privilege). Adjust if future steps need more.
permissions:
  contents: read
  # pull-requests: write    # uncomment only if workflow needs to update PRs (e.g., status comments)
  # packages: write         # uncomment only if publishing to GitHub Packages (not needed for NuGet.org)

jobs:
  build-test-pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Run Unit Tests
        run: dotnet test --no-build -c Release --filter "FullyQualifiedName~Spice.Tests"

      - name: Run Integration Tests (tag builds only)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet test --no-build -c Release Spice.IntegrationTests/Spice.IntegrationTests.csproj

      - name: Pack (tag builds only)
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          VERSION=${VERSION#v}
          echo "Packing version $VERSION"
          dotnet pack Spice.Core/Spice.Core.csproj -c Release -p:Version=$VERSION -o artifacts
          dotnet pack Spice.IO/Spice.IO.csproj -c Release -p:Version=$VERSION -o artifacts
          dotnet pack Spice.Kernels/Spice.Kernels.csproj -c Release -p:Version=$VERSION -o artifacts
          dotnet pack Spice.Ephemeris/Spice.Ephemeris.csproj -c Release -p:Version=$VERSION -o artifacts

      - name: Publish NuGet (tag builds only)
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push artifacts/*.nupkg -s https://api.nuget.org/v3/index.json -k $NUGET_API_KEY --skip-duplicate

      - name: Upload Packages (tag builds only)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v5
        with:
          name: nuget-packages
          path: artifacts/*.nupkg
